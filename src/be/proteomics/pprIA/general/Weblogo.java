package be.proteomics.pprIA.general;


import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.net.MalformedURLException;
import java.io.PrintStream;
import java.io.DataInputStream;
import java.io.IOException;

/**
 * Created by IntelliJ IDEA.
 * User: Niklaas Colaert
 * Date: 14-mei-2008
 * Time: 17:00:15
 * To change this template use File | Settings | File Templates.
 */
public class Weblogo{

    private String iSequences;
    private String url;
    private int iSiteCount = 0;
    private Double iBits = 1.0;
    private Integer iWidth = 4;
        public Weblogo(String aSequences, int aSiteCount, Double aBits, Integer aWidth) {
            this.iSequences = aSequences;
            this.iSiteCount = aSiteCount;
            this.iBits = aBits;
            this.iWidth = aWidth;
            url = this.getWeblogoAdress();
        }

        public String getWeblogoAdress() {
            String html = "";
            try {
                URL weblogo =
                        new URL("http://weblogo.berkeley.edu/logo.cgi");
                URLConnection connection =
                        weblogo.openConnection();
                connection.setDoOutput(true);
                PrintStream out = new PrintStream(connection.getOutputStream());

                out.print("sequence=" + URLEncoder.encode(iSequences));
                out.print("&");
                out.print("format=" + URLEncoder.encode("PNG"));
                out.print("&");
                out.print("logowidth=" + URLEncoder.encode("700"));
                out.print("&");
                out.print("logoheight=" + URLEncoder.encode("500"));
                out.print("&");
                out.print("logounits=" + URLEncoder.encode("pixels"));
                out.print("&");
                out.print("kind=" + URLEncoder.encode("AUTO"));
                out.print("&");
                out.print("smallsamplecorrection=" + URLEncoder.encode("on"));
                out.print("&");
                out.print("firstnum=" + URLEncoder.encode("-15"));
                out.print("&");
                if(iWidth != 15){
                    out.print("logostart=" + URLEncoder.encode( String.valueOf(-1*iWidth) ));
                    out.print("&");
                    out.print("logoend=" + URLEncoder.encode(String.valueOf(iWidth - 1)));
                    out.print("&");
                }
                out.print("symbolsperline=" + URLEncoder.encode("32"));
                out.print("&");
                out.print("res=" + URLEncoder.encode("96"));
                out.print("&");
                out.print("res_units=" + URLEncoder.encode("ppi"));
                out.print("&");
                out.print("antialias=" + URLEncoder.encode("on"));
                out.print("&");
                out.print("title=" + URLEncoder.encode("Generated by PPR, based on " + iSiteCount + " sites."));
                out.print("&");
                out.print("barbits=" + URLEncoder.encode(String.valueOf(iBits)));
                out.print("&");
                out.print("yaxis=" + URLEncoder.encode("on"));
                out.print("&");
                out.print("yaxis_label=" + URLEncoder.encode("bits"));
                out.print("&");
                out.print("xaxis=" + URLEncoder.encode("on"));
                out.print("&");
                out.print("xaxis_label=" + URLEncoder.encode(" ... P2 = -2 , P1 = -1 , P1' = 0 , P2' = 1 ..."));
                out.print("&");
                out.print("shrink=" + URLEncoder.encode("0.5"));
                out.print("&");
                out.print("fineprint=" + URLEncoder.encode("on"));
                out.print("&");
                out.print("ticbits=" + URLEncoder.encode("1"));
                out.print("&");
                out.print("colorscheme=" + URLEncoder.encode("DEFAULT"));
                out.print("&");
                out.print("symbol1=" + URLEncoder.encode("KRH"));
                out.print("&");
                out.print("color1" + URLEncoder.encode("green"));
                out.print("&");
                out.print("rgb1=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol2=" + URLEncoder.encode("DE"));
                out.print("&");
                out.print("color2=" + URLEncoder.encode("blue"));
                out.print("&");
                out.print("rgb2=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol3=" + URLEncoder.encode("AVLIPWFM"));
                out.print("&");
                out.print("color3=" + URLEncoder.encode("red"));
                out.print("&");
                out.print("rgb3=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol4=" + URLEncoder.encode(""));
                out.print("&");
                out.print("color4=" + URLEncoder.encode("black"));
                out.print("&");
                out.print("rgb4=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol5=" + URLEncoder.encode(""));
                out.print("&");
                out.print("color5=" + URLEncoder.encode("purple"));
                out.print("&");
                out.print("rgb5=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol6=" + URLEncoder.encode(""));
                out.print("&");
                out.print("color6=" + URLEncoder.encode("orange"));
                out.print("&");
                out.print("rgb6=" + URLEncoder.encode(""));
                out.print("&");
                out.print("symbol7=" + URLEncoder.encode(""));
                out.print("&");
                out.print("color7=" + URLEncoder.encode("black"));
                out.print("&");
                out.print("rgb7=" + URLEncoder.encode(""));
                out.print("&");
                out.print("color0=" + URLEncoder.encode("black"));
                out.print("&");
                out.print("rgbO=" + URLEncoder.encode(""));
                out.print("&");
                out.print("command=" + URLEncoder.encode("Create Logo"));

                out.close();
                DataInputStream in = new DataInputStream(connection.getInputStream());
                html = (connection.getURL()).toString();

                in.close();
            } catch (MalformedURLException mue) {
                System.out.println("Illegal URL: " + mue);
            } catch (IOException ioe) {
                System.out.println("IOException: " + ioe);
                html = "error";
            } catch (Exception e) {
                System.out.println("Error: " + e);
            }
            return html;
        }

        public String getUrl() {
            return url;
        }
    }